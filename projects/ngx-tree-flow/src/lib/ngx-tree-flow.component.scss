
:host {
  height: 100%;
  display: block;
   //Background color must be set here and is used as background of svg and to fill nodes (if not filled lines will be visible)
   --ngx-tree-flow-background: #121212;
   // default => default style is equal to disabled
   --ngx-tree-flow-fill-color-node-default: var(--ngx-tree-flow-background);
   --ngx-tree-flow-stroke-color-node-default: #CBCBCB;
   --ngx-tree-flow-text-color-default: #CBCBCB;
   /*disabled*/
   --ngx-tree-flow-fill-color-node-disabled: var(--ngx-tree-flow-background);
   --ngx-tree-flow-stroke-color-node-disabled: #CBCBCB;
   --ngx-tree-flow-text-color-disabled: #CBCBCB;
   /*enabled*/
   --ngx-tree-flow-fill-color-node-enabled: var(--ngx-tree-flow-background);
   --ngx-tree-flow-stroke-color-node-enabled: white;
   --ngx-tree-flow-text-color-enabled: white;
   /*active*/
   --ngx-tree-flow-fill-color-node-active: white;
   --ngx-tree-flow-stroke-color-node-active: white;
   --ngx-tree-flow-text-color-active: var(--ngx-tree-flow-background);
   /*completed*/
   --ngx-tree-flow-fill-color-node-completed: #797979;
   --ngx-tree-flow-stroke-color-node-completed: #797979;
   --ngx-tree-flow-text-color-completed: var(--ngx-tree-flow-background);
   /*error*/
   --ngx-tree-flow-fill-color-node-error: #B22F00;
   --ngx-tree-flow-stroke-color-node-error: #D73B04;
   --ngx-tree-flow-text-color-error: white;
   /*others*/
   --ngx-tree-flow-text-font-size: 0.9rem;
   --ngx-tree-flow-line-color: darkgray;
}

.linearLabel {
  stroke: var(--ngx-tree-flow-text-color-enabled) !important;
  fill: var(--ngx-tree-flow-text-color-enabled) !important;
  font-family: "Aktiv Grotesk", Arial, sans-serif;
  font-size: 0.9rem;
  line-height: 1.15625rem;
  letter-spacing: .03125rem;
}

line{
  &.line-color-default {
    stroke: var(--ngx-tree-flow-line-color);
  }
}

.line-default {
  stroke: var(--ngx-tree-flow-stroke-color-node-default);
}
.line-disabled {
  stroke: var(--ngx-tree-flow-stroke-color-node-disabled);
}
.line-enabled {
  stroke: var(--ngx-tree-flow-stroke-color-node-enabled);
}
.line-active {
  stroke: var(--ngx-tree-flow-stroke-color-node-active);
}
.line-completed {
  stroke: var(--ngx-tree-flow-stroke-color-node-completed);
}
.line-error {
  stroke: var(--ngx-tree-flow-stroke-color-node-error);
}

text {
  font-size: var(--ngx-tree-flow-text-font-size);
}

.node-default {
  fill: var(--ngx-tree-flow-fill-color-node-default);
  stroke: var(--ngx-tree-flow-stroke-color-node-default);

  text {
    stroke: var(--ngx-tree-flow-text-color-default);
    fill: var(--ngx-tree-flow-text-color-default);
  }
}

.node-disabled {
  fill: var(--ngx-tree-flow-fill-color-node-disabled);
  stroke: var(--ngx-tree-flow-stroke-color-node-disabled);

  text {
    stroke: var(--ngx-tree-flow-text-color-disabled);
    fill: var(--ngx-tree-flow-text-color-disabled);
  }
}

.node-enabled {
  fill: var(--ngx-tree-flow-fill-color-node-enabled);
  stroke: var(--ngx-tree-flow-stroke-color-node-enabled);
  text {
    stroke: var(--ngx-tree-flow-text-color-enabled);
    fill: var(--ngx-tree-flow-text-color-enabled);
  }
}

.node-active {
  fill: var(--ngx-tree-flow-fill-color-node-active);
  stroke: var(--ngx-tree-flow-stroke-color-node-active);
  text {
    stroke: var(--ngx-tree-flow-text-color-active);
    fill: var(--ngx-tree-flow-text-color-active);
  }
}

.node-completed {
  fill: var(--ngx-tree-flow-fill-color-node-completed);
  stroke: var(--ngx-tree-flow-stroke-color-node-completed);

  text {
    stroke: var(--ngx-tree-flow-text-color-completed);
    fill: var(--ngx-tree-flow-text-color-completed);
  }
}

.node-error {
  fill: var(--ngx-tree-flow-fill-color-node-error);
  stroke: var(--ngx-tree-flow-stroke-color-node-error);

  text {
    stroke: var(--ngx-tree-flow-text-color-error);
    fill: var(--ngx-tree-flow-text-color-error);
  }
}

.fit{
  height: 99% !important;
  width: 100% !important;
}
